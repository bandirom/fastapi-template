name: Tests
on:
  push:
    branches:
env:
  POETRY_VIRTUALENVS_CREATE: false
  DATABASE_URI: 'postgresql+asyncpg://fastapi:postgres_password@postgres/template'

jobs:
  tests:
    name: run pytest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: checkout repo
        uses: actions/checkout@v4
      - name: install dependencies
        run: |
          pip install poetry
          poetry install --with dev
      - name: pytest
        run:
          pytest
  black:
    name: run black
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: checkout repo
        uses: actions/checkout@v4
      - name: install dependencies
        run: |
          pip install black
      - name: black
        run: black . --check
  isort:
    name: run isort
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: checkout repo
        uses: actions/checkout@v4
      - name: install dependencies
        run: |
          pip install isort
      - name: isort
        run: isort . --check
  alembic_check:
    name: run alembic_check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: checkout repo
        uses: actions/checkout@v4
      - name: install dependencies
        run: |
          pip install poetry
          poetry install
      - name: check migrations
        run: alembic check
    services:
      postgres:
        image: postgres:15.1-alpine
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_PASSWORD: postgres_password
          POSTGRES_USER: fastapi
          POSTGRES_DB: template
